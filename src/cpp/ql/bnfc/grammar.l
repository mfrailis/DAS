
/* This FLex file was machine-generated by the BNF converter */
%{
#include <string.h>
#include "Parser.H"
#define YY_BUFFER_LENGTH 4096
extern int yy_mylinenumber ;
static char YY_PARSED_STRING[YY_BUFFER_LENGTH];
static void YY_BUFFER_APPEND(char *s)
{
  strcat(YY_PARSED_STRING, s); //Do something better here!
}
static void YY_BUFFER_RESET(void)
{
  for(int x = 0; x < YY_BUFFER_LENGTH; x++)
    YY_PARSED_STRING[x] = 0;
}

%}

LETTER [a-zA-Z]
CAPITAL [A-Z]
SMALL [a-z]
DIGIT [0-9]
IDENT [a-zA-Z0-9'_]
%START YYINITIAL COMMENT CHAR CHARESC CHAREND STRING ESCAPED
%%

<YYINITIAL>"&&"      	 return _SYMB_0;
<YYINITIAL>"||"      	 return _SYMB_1;
<YYINITIAL>"!"      	 return _SYMB_2;
<YYINITIAL>"("      	 return _SYMB_3;
<YYINITIAL>")"      	 return _SYMB_4;
<YYINITIAL>".startsWith"      	 return _SYMB_5;
<YYINITIAL>".endsWith"      	 return _SYMB_6;
<YYINITIAL>"+"      	 return _SYMB_7;
<YYINITIAL>"-"      	 return _SYMB_8;
<YYINITIAL>"*"      	 return _SYMB_9;
<YYINITIAL>"/"      	 return _SYMB_10;
<YYINITIAL>"."      	 return _SYMB_11;

<YYINITIAL>\>|\<|\<\=|\>\=|\=\=|\!\=     	 yylval.string_ = strdup(yytext); return _SYMB_12;
<YYINITIAL>'({LETTER}|{DIGIT}|[\\\/ \-\.\_\~])*'     	 yylval.string_ = strdup(yytext); return _SYMB_13;
<YYINITIAL>true|false     	 yylval.string_ = strdup(yytext); return _SYMB_14;
<YYINITIAL>{DIGIT}+"."{DIGIT}+("e"(\-)?{DIGIT}+)?      	 yylval.double_ = atof(yytext); return _DOUBLE_;
<YYINITIAL>{DIGIT}+      	 yylval.int_ = atoll(yytext); return _INTEGER_;
<YYINITIAL>{LETTER}{IDENT}*      	 yylval.string_ = strdup(yytext); return _IDENT_;
\n  ++yy_mylinenumber ;
<YYINITIAL>[ \t\r\n\f]      	 /* ignore white space. */;
<YYINITIAL>.      	 return _ERROR_;
%%
int initialize_lexer(FILE *inp) { yyin = inp; BEGIN YYINITIAL; }
int yywrap(void) { return 1; }

